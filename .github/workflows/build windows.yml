name: Build windows

on:
  workflow_dispatch:
    inputs:
      branch:
        description: PDFium branch
        required: false
        default: master
      version:
        description: PDFium version
        required: false
        default: ""

jobs:
  build:
    name: Build
    strategy:
      fail-fast: false
      matrix:
        include:
          - artifact: pdfium-win-arm
            target_os: win
            target_cpu: arm
            runner: windows-2019
          - artifact: pdfium-win-arm64
            target_os: win
            target_cpu: arm64
            runner: windows-2019
          - artifact: pdfium-win-x64
            target_os: win
            target_cpu: x64
            runner: windows-2019

    runs-on: ${{ matrix.runner }}
    steps:
      - name: Checkout this repo
        uses: actions/checkout@v2
      - name: Set environment variables
        run: |
          cat >>$GITHUB_ENV <<END
          PDFium_BRANCH=${{ github.event.inputs.branch }}
          PDFium_CONFIGURATION=${{ matrix.cfg || 'Release' }}
          PDFium_TARGET_CPU=${{ matrix.target_cpu }}
          PDFium_TARGET_OS=${{ matrix.target_os }}
          PDFium_V8=${{ matrix.v8 || 'disabled' }}
          PDFium_VERSION=${{ github.event.inputs.version }}
          END
          steps/00-environment.sh
        shell: bash
      - name: Install (1/2)
        run: steps/01-install.sh
        shell: bash
      - name: Checkout PDFium
        run: steps/02-checkout.sh
        shell: bash
      - name: Apply patches
        run: steps/03-patch.sh
        shell: bash
      - name: Install (2/2)
        run: steps/04-install-extras.sh
        shell: bash
      - name: Configure
        run: steps/05-configure.sh
        shell: bash
      - name: Build
        run: steps/06-build.sh
        shell: bash
      - name: Pack
        run: steps/07-pack.sh
        shell: bash
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.artifact }}
          path: staging/
      - name: Test
        run: steps/08-test.sh
        shell: bash
      - name: Upload tarball to GitHub Release
        uses: ncipollo/release-action@v1
        if: ${{ startsWith(github.event.inputs.branch, 'chromium/') }}
        with:
          tag: ${{ github.event.inputs.branch }}
          allowUpdates: true
          draft: true
          artifacts: pdfium*.tgz
          token: ${{ secrets.GITHUB_TOKEN }}

  publish:
    name: Publish Release
    if: ${{ startsWith(github.event.inputs.branch, 'chromium/') }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Write release body
        run: echo 'This version was built with branch `${{ github.event.inputs.branch }}` of PDFium' > RELEASE.md
      - name: Get changes
        continue-on-error: true
        run: |
          CURRENT_REV=${{ github.event.inputs.branch }}
          PREVIOUS_REV=$(curl --silent "https://api.github.com/repos/${{ github.repository }}/releases/latest" | jq -r ".tag_name")
          git clone -b "${{ github.event.inputs.branch }}" https://pdfium.googlesource.com/pdfium.git
          cat <<END >> RELEASE.md
          ### Changes
          Commits between \`$PREVIOUS_REV\` and \`$CURRENT_REV\`:
          END
          git -C "pdfium" log origin/${PREVIOUS_REV}.. --pretty=format:'* [%s](https://pdfium.googlesource.com/pdfium/+/%H)' >> RELEASE.md
      - name: Publish Release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          bodyFile: RELEASE.md
          draft: false
          token: ${{ secrets.GITHUB_TOKEN }}
          name: PDFium ${{ github.event.inputs.version }}
          tag: ${{ github.event.inputs.branch }}
